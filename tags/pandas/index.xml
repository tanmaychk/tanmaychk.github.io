<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pandas on Tanmay Chakrabarty</title><link>https://tanmaychk.github.io/tags/pandas/</link><description>Recent content in Pandas on Tanmay Chakrabarty</description><generator>Source Themes academia (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright &amp;copy; {year}</copyright><lastBuildDate>Thu, 01 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://tanmaychk.github.io/tags/pandas/index.xml" rel="self" type="application/rss+xml"/><item><title>Capital Asset Pricing Model</title><link>https://tanmaychk.github.io/project/capm/</link><pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate><guid>https://tanmaychk.github.io/project/capm/</guid><description>&lt;p>The CAPM Financial Analysis project is a Python-based implementation of the Capital Asset Pricing Model (CAPM). This model is widely used in finance to estimate the expected return on an investment by taking into account the risk-free rate, the market risk premium, and the asset&amp;rsquo;s beta. The project provides functionalities to calculate the expected returns for a given set of securities based on the CAPM formula.
The application uses libraries such as Pandas, NumPy, Streamlit and Plotly, to gather stock data from Yahoo Finance and perform calculations to determine expected returns.&lt;/p></description></item><item><title>Movie Recommendation System</title><link>https://tanmaychk.github.io/project/movie-recommendation/</link><pubDate>Sun, 06 Nov 2022 18:30:00 +0000</pubDate><guid>https://tanmaychk.github.io/project/movie-recommendation/</guid><description>&lt;p>Used Python and Pandas to create a scoring system that displays movie commendations based on comparable users. Used the 25m dataset provided by the Movie Lens and used the Ipywidgets library. The solution first finds the Term Frequency and Inverse document frequency (TFIDF) matrix using scikit-learn. It then compares the searched movie title to available titles using Cosine distance based collaborative filtering. Lastly, it finds similar users who liked the same movie and presentls the top-10 results.&lt;/p></description></item></channel></rss>